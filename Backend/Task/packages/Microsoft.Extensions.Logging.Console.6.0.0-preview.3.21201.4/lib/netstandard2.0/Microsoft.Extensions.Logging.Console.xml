<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Logging.Console</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatter" />
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatter.#ctor(System.String)">
      <param name="name" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatter.Write``1(Microsoft.Extensions.Logging.Abstractions.LogEntry{``0}@|System.Runtime.InteropServices.InAttribute,Microsoft.Extensions.Logging.IExternalScopeProvider,System.IO.TextWriter)">
      <param name="logEntry" />
      <param name="scopeProvider" />
      <param name="textWriter" />
      <typeparam name="TState" />
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatter.Name" />
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames" />
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Json" />
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Simple" />
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Systemd" />
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions" />
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.IncludeScopes" />
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.TimestampFormat" />
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.UseUtcTimestamp" />
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat">
      <summary>Format of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> messages.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Default">
      <summary>Produces messages in the default console format.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Systemd">
      <summary>Produces messages in a format suitable for console output to the systemd journal.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions">
      <summary>Options for a <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.DisableColors">
      <summary>Disables colors when <see langword="true" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.Format">
      <summary>Gets or sets log message format. Defaults to <see cref="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Default" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.FormatterName" />
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.IncludeScopes">
      <summary>Includes scopes when <see langword="true" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.LogToStandardErrorThreshold">
      <summary>Gets or sets value indicating the minimum level of messages that would get written to <c>Console.Error</c>.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.TimestampFormat">
      <summary>Gets or sets format string used to format timestamp in logging messages. Defaults to <see langword="null" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.UseUtcTimestamp" />
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider">
      <summary>A provider of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions})">
      <summary>Creates an instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider" />.</summary>
      <param name="options">The options to create <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> instances with.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.Console.ConsoleFormatter})">
      <param name="options" />
      <param name="formatters" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)">
      <summary>Creates a new <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance.</summary>
      <param name="name" />
      <returns>The instance of <see cref="T:Microsoft.Extensions.Logging.ILogger" /> that was created.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)">
      <summary>Sets external scope information source for logger provider.</summary>
      <param name="scopeProvider" />
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions" />
    <member name="M:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions.JsonWriterOptions" />
    <member name="T:Microsoft.Extensions.Logging.Console.LoggerColorBehavior" />
    <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Default" />
    <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Disabled" />
    <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Enabled" />
    <member name="T:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions" />
    <member name="M:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.ColorBehavior" />
    <member name="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.SingleLine" />
    <member name="T:Microsoft.Extensions.Logging.ConsoleLoggerExtensions" />
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>Adds a console logger named 'Console' to the factory.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to use.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions})">
      <summary>Adds a console logger named 'Console' to the factory.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to use.</param>
      <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <param name="builder" />
      <typeparam name="TFormatter" />
      <typeparam name="TOptions" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{``1})">
      <param name="builder" />
      <param name="configure" />
      <typeparam name="TFormatter" />
      <typeparam name="TOptions" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <param name="builder" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions})">
      <param name="builder" />
      <param name="configure" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <param name="builder" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions})">
      <param name="builder" />
      <param name="configure" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <param name="builder" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions})">
      <param name="builder" />
      <param name="configure" />
    </member>
  </members>
</doc>